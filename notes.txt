00470B44 is used to load background textures for UI, however in the instances that it's used; No issues are present.
005B1337 doesn't seem to corralate with UI issues

00594340 is used for shop UI's but not in the main menu.


INT3 breakpoint "TLS Callback 1 (windowmanagementapi.dll)" at windowmanagementapi.6EB3FC00!

Not 100% sure that the current idea for the '0x00470820 in ghidra or 0x70820 without ghidra offset' is a cdecl.
params on stack are push to functions from Ordering: __cdecl right to left // stdcall is left to right
ebp + 0x4, ebp + 0x8, ebp + 0xc

//flag 1 points to 'MOV EAX,[DAT_0077495c]' in ghidra? probably junk data at this point. Needs investigation. 
//flag 2 in the gui_load_something is always equal to '6501e7' which points to 'undefined __stdcall entry(void)' in ghidra.

gui_load_something function in dbg (with patch):
00470820 | 90                       | nop                                     |
00470821 | E9 630D7C70              | jmp patch.70C31589                      |
00470826 | A0 605C6B00              | mov al,byte ptr ds:[6B5C60]             |
0047082B | 53                       | push ebx                                |
0047082C | 55                       | push ebp                                |
0047082D | 56                       | push esi                                |
0047082E | 57                       | push edi                                |
0047082F | 884424 58                | mov byte ptr ss:[esp+58],al             |

(patch.70C31589)
patch code in dbg
70C31589 | 8B45 0C                  | mov eax,dword ptr ss:[ebp+C]            |
70C3158C | 50                       | push eax                                |
70C3158D | 8B45 08                  | mov eax,dword ptr ss:[ebp+8]            | [ebp+08]:EntryPoint
70C31590 | 50                       | push eax                                |
70C31591 | 8B45 04                  | mov eax,dword ptr ss:[ebp+4]            |
70C31594 | 50                       | push eax                                |
70C31595 | E8 93FFFFFF              | call <patch.gui_load_something(unsigned |
70C3159A | 81EC 48020000            | sub esp,248                             |
70C315A0 | FF25 2CE0C570            | jmp dword ptr ds:[<g_menu_return_addr>] |


When on XP, full overwrite patch will crash on startup with the following: (Win10 notes an error, but continues anyway.)
Log data, item 1
 Address=7C812AEB
 Message=Debug string: Flag 1 409, Flag 2 0
Str:
(null)
Log data, item 0
 Address=00471D93
 Message=Access violation when reading [3794B354]

When on Win10:
DebugString: "Flag 1 226, Flag 2 0
Str:
(null)"
EXCEPTION_DEBUG_INFO:
           dwFirstChance: 1
           ExceptionCode: 406D1388 (MS_VC_EXCEPTION)
          ExceptionFlags: 00000000
        ExceptionAddress: kernelbase.75D4B552
        NumberParameters: 4
ExceptionInformation[00]: 00001000
ExceptionInformation[01]: mss32.21141C90
ExceptionInformation[02]: 00001290
ExceptionInformation[03]: 00000000
First chance exception on 75D4B552 (406D1388, MS_VC_EXCEPTION)!